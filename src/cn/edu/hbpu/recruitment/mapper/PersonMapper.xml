<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.hbpu.recruitment.mapper.PersonMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.hbpu.recruitment.pojo.Person" >
    <id column="personId" property="personid" jdbcType="INTEGER" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="education" property="education" jdbcType="INTEGER" />
    <result column="afterEducation" property="aftereducation" jdbcType="INTEGER" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="pwd" property="pwd" jdbcType="VARCHAR" />
    <result column="headImage" property="headimage" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="registeredTime" property="registeredtime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="BaseResultMap2" type="cn.edu.hbpu.recruitment.pojo.PersonPojo" >
    <id column="personId" property="personid" jdbcType="INTEGER" />
    <result column="jobid" property="jobid" jdbcType="INTEGER" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="education" property="education" jdbcType="INTEGER" />
    <result column="afterEducation" property="aftereducation" jdbcType="INTEGER" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="pwd" property="pwd" jdbcType="VARCHAR" />
    <result column="headImage" property="headimage" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="registeredTime" property="registeredtime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="deliverytime" property="deliverytime" jdbcType="TIMESTAMP" />
    <result column="c3Name" property="jobC3name" jdbcType="VARCHAR" />
    <result column="companyname" property="companyname" jdbcType="VARCHAR" />
    <result column="positionName" property="positionname" jdbcType="VARCHAR" />
    <result column="schoolName" property="schoolname" jdbcType="VARCHAR" />
    
  </resultMap>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    personId, userName, sex, age, education, afterEducation, tel, email, pwd, headImage, 
    status, registeredTime, state
  </sql>
   <sql id="Base_Column_List2" >
    person.personId, userName, sex, age,  person.education, afterEducation, tel,  person.email,  person.pwd, headImage, 
   person_job.status, registeredTime, person.state ,c3Name,deliverytime,workexperience.companyname,positionName,schoolName,person_job.jobid
  </sql>
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.hbpu.recruitment.pojo.PersonExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from person
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="getPersonPojosByCompanyid0" resultMap="BaseResultMap2"  parameterType="java.lang.Integer" >
    select
     
    <include refid="Base_Column_List2" />
    from company, job ,jobc3,person,person_job  ,workexperience,resumeinformation
where job.companyId=company.companyId and job.jobId=person_job.jobId and  person_job.personId=person.personId and jobc3.c3Id = job.c3Id
			and  company.companyId  =#{companyid,jdbcType=INTEGER}   and  person_job.status=0  and person.personId=resumeinformation.personId
			and  person.personId=workexperience.personId 
    
  </select>
  
   <select id="getPersonPojosByCompanyid1" resultMap="BaseResultMap2"  parameterType="java.lang.Integer" >
    select
     
    <include refid="Base_Column_List2" />
    from company, job ,jobc3,person,person_job  ,workexperience,resumeinformation
where job.companyId=company.companyId and job.jobId=person_job.jobId and  person_job.personId=person.personId and jobc3.c3Id = job.c3Id
			and  company.companyId  =#{companyid,jdbcType=INTEGER}   and  person_job.status=1  and person.personId=resumeinformation.personId
			and  person.personId=workexperience.personId 
    
  </select>
  
     <select id="getPersonPojosByCompanyid2" resultMap="BaseResultMap2"  parameterType="java.lang.Integer" >
     select
     
    <include refid="Base_Column_List2" />
    from company, job ,jobc3,person,person_job  ,workexperience,resumeinformation
where job.companyId=company.companyId and job.jobId=person_job.jobId and  person_job.personId=person.personId and jobc3.c3Id = job.c3Id
			and  company.companyId  =#{companyid,jdbcType=INTEGER}   and  person_job.status=2  and person.personId=resumeinformation.personId
			and  person.personId=workexperience.personId 
    
  </select>
  
   <select id="getRecentlyRegister" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
     select  count(*) FROM  person 
     WHERE ( TO_DAYS(NOW()) - TO_DAYS(person.registeredTime) )  &lt;  #{num,jdbcType=INTEGER} 
     
    
     
  </select>
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from person
    where personId = #{personid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from person
    where personId = #{personid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.hbpu.recruitment.pojo.PersonExample" >
    delete from person
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.hbpu.recruitment.pojo.Person"    >
    insert into person (personId, userName, sex, 
      age, education, afterEducation, 
      tel, email, pwd, headImage, 
      status, registeredTime, state
      )
    values (#{personid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{education,jdbcType=INTEGER}, #{aftereducation,jdbcType=INTEGER}, 
      #{tel,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, #{headimage,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{registeredtime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}
      )
      
       
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.hbpu.recruitment.pojo.Person"  >
    insert into person
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="personid != null" >
        personId,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="education != null" >
        education,
      </if>
      <if test="aftereducation != null" >
        afterEducation,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="pwd != null" >
        pwd,
      </if>
      <if test="headimage != null" >
        headImage,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="registeredtime != null" >
        registeredTime,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="personid != null" >
        #{personid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="education != null" >
        #{education,jdbcType=INTEGER},
      </if>
      <if test="aftereducation != null" >
        #{aftereducation,jdbcType=INTEGER},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="headimage != null" >
        #{headimage,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="registeredtime != null" >
        #{registeredtime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.hbpu.recruitment.pojo.PersonExample" resultType="java.lang.Integer" >
    select count(*) from person
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update person
    <set >
      <if test="record.personid != null" >
        personId = #{record.personid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null" >
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.education != null" >
        education = #{record.education,jdbcType=INTEGER},
      </if>
      <if test="record.aftereducation != null" >
        afterEducation = #{record.aftereducation,jdbcType=INTEGER},
      </if>
      <if test="record.tel != null" >
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.pwd != null" >
        pwd = #{record.pwd,jdbcType=VARCHAR},
      </if>
      <if test="record.headimage != null" >
        headImage = #{record.headimage,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.registeredtime != null" >
        registeredTime = #{record.registeredtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update person
    set personId = #{record.personid,jdbcType=INTEGER},
      userName = #{record.username,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      education = #{record.education,jdbcType=INTEGER},
      afterEducation = #{record.aftereducation,jdbcType=INTEGER},
      tel = #{record.tel,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      pwd = #{record.pwd,jdbcType=VARCHAR},
      headImage = #{record.headimage,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      registeredTime = #{record.registeredtime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.hbpu.recruitment.pojo.Person" >
    update person
    <set >
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="education != null" >
        education = #{education,jdbcType=INTEGER},
      </if>
      <if test="aftereducation != null" >
        afterEducation = #{aftereducation,jdbcType=INTEGER},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="headimage != null" >
        headImage = #{headimage,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="registeredtime != null" >
        registeredTime = #{registeredtime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where personId = #{personid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.hbpu.recruitment.pojo.Person" >
    update person
    set userName = #{username,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      education = #{education,jdbcType=INTEGER},
      afterEducation = #{aftereducation,jdbcType=INTEGER},
      tel = #{tel,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      headImage = #{headimage,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      registeredTime = #{registeredtime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER}
    where personId = #{personid,jdbcType=INTEGER}
  </update>
</mapper>
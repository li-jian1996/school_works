<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.hbpu.recruitment.mapper.JobMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.hbpu.recruitment.pojo.Job" >
    <id column="jobId" property="jobid" jdbcType="INTEGER" />
    <result column="companyId" property="companyid" jdbcType="INTEGER" />
    <result column="c3Id" property="c3id" jdbcType="INTEGER" />
    <result column="departments" property="departments" jdbcType="VARCHAR" />
    <result column="workType" property="worktype" jdbcType="INTEGER" />
    <result column="education" property="education" jdbcType="INTEGER" />
    <result column="jobTemptation" property="jobtemptation" jdbcType="VARCHAR" />
    <result column="jobDescribe" property="jobdescribe" jdbcType="VARCHAR" />
    <result column="jobAddress" property="jobaddress" jdbcType="VARCHAR" />
    <result column="jobEmail" property="jobemail" jdbcType="VARCHAR" />
    <result column="salaryBegin" property="salarybegin" jdbcType="INTEGER" />
    <result column="salaryEnd" property="salaryend" jdbcType="INTEGER" />
    <result column="jobCity" property="jobcity" jdbcType="VARCHAR" />
    <result column="JobexpErience" property="jobexperience" jdbcType="VARCHAR" />
    <result column="beginTime" property="begintime" jdbcType="TIMESTAMP" />
    <result column="endTime" property="endtime" jdbcType="TIMESTAMP" />
    <result column="hits" property="hits" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="BaseResultMap2" type="cn.edu.hbpu.recruitment.pojo.jobCompanyPojo" >
    <id column="jobId" property="jobid" jdbcType="INTEGER" />
    <result column="companyId" property="companyid" jdbcType="INTEGER" />
    <result column="c3Id" property="c3id" jdbcType="INTEGER" />
    <result column="departments" property="departments" jdbcType="VARCHAR" />
    <result column="workType" property="worktype" jdbcType="INTEGER" />
    <result column="education" property="education" jdbcType="INTEGER" />
    <result column="jobTemptation" property="jobtemptation" jdbcType="VARCHAR" />
    <result column="jobDescribe" property="jobdescribe" jdbcType="VARCHAR" />
    <result column="jobAddress" property="jobaddress" jdbcType="VARCHAR" />
    <result column="jobEmail" property="jobemail" jdbcType="VARCHAR" />
    <result column="salaryBegin" property="salarybegin" jdbcType="INTEGER" />
    <result column="salaryEnd" property="salaryend" jdbcType="INTEGER" />
    <result column="jobCity" property="jobcity" jdbcType="VARCHAR" />
    <result column="JobexpErience" property="jobexperience" jdbcType="VARCHAR" />
    <result column="beginTime" property="begintime" jdbcType="TIMESTAMP" />
    <result column="endTime" property="endtime" jdbcType="TIMESTAMP" />
    <result column="hits" property="hits" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="companyName" property="companyName" jdbcType="VARCHAR" />
    <result column="industry" property="industry" jdbcType="VARCHAR" />
    <result column="development" property="development" jdbcType="VARCHAR" />
    <result column="companytag" property="companyTag" jdbcType="VARCHAR" />
    <result column="c3Name" property="c3Name" jdbcType="VARCHAR" />
    <result column="ceoName" property="ceoName" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    jobId, companyId, c3Id, departments, workType, education, jobTemptation, jobDescribe, 
    jobAddress, jobEmail, salaryBegin, salaryEnd, jobCity, JobexpErience, beginTime, 
    endTime, hits, state
  </sql>
  <sql id="Base_Column_List2" >
    job.jobId, job.companyId, job.c3Id, departments, workType, education, jobTemptation, jobDescribe, 
    jobAddress, jobEmail, salaryBegin, salaryEnd, jobCity, JobexpErience, beginTime, 
    endTime, hits, job.state, companyName,industry,development,companySize,companyTag,c3Name,ceoName
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.hbpu.recruitment.pojo.JobExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
    <select id="selectJobCompanyPojoByExample" resultMap="BaseResultMap2" parameterType="cn.edu.hbpu.recruitment.pojo.JobExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List2" />
     from (job left join company on job.companyId=company.companyId) left join jobc3 on job.c3Id=jobc3.c3Id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectJobCompanyPojoByExample1" resultMap="BaseResultMap2" parameterType="java.lang.Integer"  >
    select
    
    <include refid="Base_Column_List2" />
     from (job left join company on job.companyId=company.companyId) left join jobc3 on job.c3Id=jobc3.c3Id
    <if test="_parameter != null" >
      where job.companyId = #{companyid,jdbcType=INTEGER}  and job.state=1 
    </if>
    
  </select>
  
   <select id="selectJobCompanyPojoByExample2" resultMap="BaseResultMap2" parameterType="java.lang.Integer"  >
    select
    
    <include refid="Base_Column_List2" />
     from (job left join company on job.companyId=company.companyId) left join jobc3 on job.c3Id=jobc3.c3Id
    <if test="_parameter != null" >
      where job.companyId = #{companyid,jdbcType=INTEGER}  and job.state=2 
    </if>
    
  </select>
  
   <select id="selectJobCompanyPojoByPersonid99" resultMap="BaseResultMap2" parameterType="java.lang.Integer"  >
    select
    
    <include refid="Base_Column_List2" />
       
     from   person_job ,job,company,jobc3
       
    <if test="_parameter != null" >
      where person_job.personId = #{personid,jdbcType=INTEGER}  and person_job.jobId=job.jobId and  job.companyId=company.companyId and job.c3Id=jobc3.c3Id
    </if>
    
  </select>
  
   <select id="selectJobCompanyPojoByPersonid0" resultMap="BaseResultMap2" parameterType="java.lang.Integer"  >
    select
    
    <include refid="Base_Column_List2" />
       
     from   person_job ,job,company,jobc3
       
    <if test="_parameter != null" >
      where person_job.personId = #{personid,jdbcType=INTEGER}  and person_job.jobId=job.jobId and  job.companyId=company.companyId 
      and job.c3Id=jobc3.c3Id   and person_job.status=0
    </if>
    
  </select>
  
   <select id="selectJobCompanyPojoByPersonid1" resultMap="BaseResultMap2" parameterType="java.lang.Integer"  >
    select
    
    <include refid="Base_Column_List2" />
       
     from   person_job ,job,company,jobc3
       
    <if test="_parameter != null" >
      where person_job.personId = #{personid,jdbcType=INTEGER}  and person_job.jobId=job.jobId and  job.companyId=company.companyId 
      and job.c3Id=jobc3.c3Id   and person_job.status=1
    </if>
    
  </select>
  
   <select id="selectJobCompanyPojoByPersonid2" resultMap="BaseResultMap2" parameterType="java.lang.Integer"  >
    select
    
    <include refid="Base_Column_List2" />
       
     from   person_job ,job,company,jobc3
       
    <if test="_parameter != null" >
      where person_job.personId = #{personid,jdbcType=INTEGER}  and person_job.jobId=job.jobId and  job.companyId=company.companyId 
      and job.c3Id=jobc3.c3Id   and person_job.status=2
    </if>
    
  </select>
  
  <select id="selectJobCompanyByExample" resultMap="BaseResultMap2"  >
    select
    <include refid="Base_Column_List2" />
     
    from (job left join company on job.companyId=company.companyId) left join jobc3 on job.c3Id=jobc3.c3Id
        where job.state=1  order by hits desc 
     
  </select>
  
   <select id="selectNewJobCompany" resultMap="BaseResultMap2"  >
    select
    <include refid="Base_Column_List2" />
     
    from (job left join company on job.companyId=company.companyId) left join jobc3 on job.c3Id=jobc3.c3Id
        where job.state=1  order by  beginTime desc 
     
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from job
    where jobId = #{jobid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from job
    where jobId = #{jobid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.hbpu.recruitment.pojo.JobExample" >
    delete from job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.hbpu.recruitment.pojo.Job" >
    insert into job (jobId, companyId, c3Id, 
      departments, workType, education, 
      jobTemptation, jobDescribe, jobAddress, 
      jobEmail, salaryBegin, salaryEnd, 
      jobCity, JobexpErience, beginTime, 
      endTime, hits, state
      )
    values (#{jobid,jdbcType=INTEGER}, #{companyid,jdbcType=INTEGER}, #{c3id,jdbcType=INTEGER}, 
      #{departments,jdbcType=VARCHAR}, #{worktype,jdbcType=INTEGER}, #{education,jdbcType=INTEGER}, 
      #{jobtemptation,jdbcType=VARCHAR}, #{jobdescribe,jdbcType=VARCHAR}, #{jobaddress,jdbcType=VARCHAR}, 
      #{jobemail,jdbcType=VARCHAR}, #{salarybegin,jdbcType=INTEGER}, #{salaryend,jdbcType=INTEGER}, 
      #{jobcity,jdbcType=VARCHAR}, #{jobexperience,jdbcType=VARCHAR}, #{begintime,jdbcType=TIMESTAMP}, 
      #{endtime,jdbcType=TIMESTAMP}, #{hits,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.hbpu.recruitment.pojo.Job" >
    insert into job
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="jobid != null" >
        jobId,
      </if>
      <if test="companyid != null" >
        companyId,
      </if>
      <if test="c3id != null" >
        c3Id,
      </if>
      <if test="departments != null" >
        departments,
      </if>
      <if test="worktype != null" >
        workType,
      </if>
      <if test="education != null" >
        education,
      </if>
      <if test="jobtemptation != null" >
        jobTemptation,
      </if>
      <if test="jobdescribe != null" >
        jobDescribe,
      </if>
      <if test="jobaddress != null" >
        jobAddress,
      </if>
      <if test="jobemail != null" >
        jobEmail,
      </if>
      <if test="salarybegin != null" >
        salaryBegin,
      </if>
      <if test="salaryend != null" >
        salaryEnd,
      </if>
      <if test="jobcity != null" >
        jobCity,
      </if>
      <if test="jobexperience != null" >
        JobexpErience,
      </if>
      <if test="begintime != null" >
        beginTime,
      </if>
      <if test="endtime != null" >
        endTime,
      </if>
      <if test="hits != null" >
        hits,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="jobid != null" >
        #{jobid,jdbcType=INTEGER},
      </if>
      <if test="companyid != null" >
        #{companyid,jdbcType=INTEGER},
      </if>
      <if test="c3id != null" >
        #{c3id,jdbcType=INTEGER},
      </if>
      <if test="departments != null" >
        #{departments,jdbcType=VARCHAR},
      </if>
      <if test="worktype != null" >
        #{worktype,jdbcType=INTEGER},
      </if>
      <if test="education != null" >
        #{education,jdbcType=INTEGER},
      </if>
      <if test="jobtemptation != null" >
        #{jobtemptation,jdbcType=VARCHAR},
      </if>
      <if test="jobdescribe != null" >
        #{jobdescribe,jdbcType=VARCHAR},
      </if>
      <if test="jobaddress != null" >
        #{jobaddress,jdbcType=VARCHAR},
      </if>
      <if test="jobemail != null" >
        #{jobemail,jdbcType=VARCHAR},
      </if>
      <if test="salarybegin != null" >
        #{salarybegin,jdbcType=INTEGER},
      </if>
      <if test="salaryend != null" >
        #{salaryend,jdbcType=INTEGER},
      </if>
      <if test="jobcity != null" >
        #{jobcity,jdbcType=VARCHAR},
      </if>
      <if test="jobexperience != null" >
        #{jobexperience,jdbcType=VARCHAR},
      </if>
      <if test="begintime != null" >
        #{begintime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="hits != null" >
        #{hits,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.hbpu.recruitment.pojo.JobExample" resultType="java.lang.Integer" >
    select count(*) from job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update job
    <set >
      <if test="record.jobid != null" >
        jobId = #{record.jobid,jdbcType=INTEGER},
      </if>
      <if test="record.companyid != null" >
        companyId = #{record.companyid,jdbcType=INTEGER},
      </if>
      <if test="record.c3id != null" >
        c3Id = #{record.c3id,jdbcType=INTEGER},
      </if>
      <if test="record.departments != null" >
        departments = #{record.departments,jdbcType=VARCHAR},
      </if>
      <if test="record.worktype != null" >
        workType = #{record.worktype,jdbcType=INTEGER},
      </if>
      <if test="record.education != null" >
        education = #{record.education,jdbcType=INTEGER},
      </if>
      <if test="record.jobtemptation != null" >
        jobTemptation = #{record.jobtemptation,jdbcType=VARCHAR},
      </if>
      <if test="record.jobdescribe != null" >
        jobDescribe = #{record.jobdescribe,jdbcType=VARCHAR},
      </if>
      <if test="record.jobaddress != null" >
        jobAddress = #{record.jobaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.jobemail != null" >
        jobEmail = #{record.jobemail,jdbcType=VARCHAR},
      </if>
      <if test="record.salarybegin != null" >
        salaryBegin = #{record.salarybegin,jdbcType=INTEGER},
      </if>
      <if test="record.salaryend != null" >
        salaryEnd = #{record.salaryend,jdbcType=INTEGER},
      </if>
      <if test="record.jobcity != null" >
        jobCity = #{record.jobcity,jdbcType=VARCHAR},
      </if>
      <if test="record.jobexperience != null" >
        JobexpErience = #{record.jobexperience,jdbcType=VARCHAR},
      </if>
      <if test="record.begintime != null" >
        beginTime = #{record.begintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null" >
        endTime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.hits != null" >
        hits = #{record.hits,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update job
    set jobId = #{record.jobid,jdbcType=INTEGER},
      companyId = #{record.companyid,jdbcType=INTEGER},
      c3Id = #{record.c3id,jdbcType=INTEGER},
      departments = #{record.departments,jdbcType=VARCHAR},
      workType = #{record.worktype,jdbcType=INTEGER},
      education = #{record.education,jdbcType=INTEGER},
      jobTemptation = #{record.jobtemptation,jdbcType=VARCHAR},
      jobDescribe = #{record.jobdescribe,jdbcType=VARCHAR},
      jobAddress = #{record.jobaddress,jdbcType=VARCHAR},
      jobEmail = #{record.jobemail,jdbcType=VARCHAR},
      salaryBegin = #{record.salarybegin,jdbcType=INTEGER},
      salaryEnd = #{record.salaryend,jdbcType=INTEGER},
      jobCity = #{record.jobcity,jdbcType=VARCHAR},
      JobexpErience = #{record.jobexperience,jdbcType=VARCHAR},
      beginTime = #{record.begintime,jdbcType=TIMESTAMP},
      endTime = #{record.endtime,jdbcType=TIMESTAMP},
      hits = #{record.hits,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.hbpu.recruitment.pojo.Job" >
    update job
    <set >
      <if test="companyid != null" >
        companyId = #{companyid,jdbcType=INTEGER},
      </if>
      <if test="c3id != null" >
        c3Id = #{c3id,jdbcType=INTEGER},
      </if>
      <if test="departments != null" >
        departments = #{departments,jdbcType=VARCHAR},
      </if>
      <if test="worktype != null" >
        workType = #{worktype,jdbcType=INTEGER},
      </if>
      <if test="education != null" >
        education = #{education,jdbcType=INTEGER},
      </if>
      <if test="jobtemptation != null" >
        jobTemptation = #{jobtemptation,jdbcType=VARCHAR},
      </if>
      <if test="jobdescribe != null" >
        jobDescribe = #{jobdescribe,jdbcType=VARCHAR},
      </if>
      <if test="jobaddress != null" >
        jobAddress = #{jobaddress,jdbcType=VARCHAR},
      </if>
      <if test="jobemail != null" >
        jobEmail = #{jobemail,jdbcType=VARCHAR},
      </if>
      <if test="salarybegin != null" >
        salaryBegin = #{salarybegin,jdbcType=INTEGER},
      </if>
      <if test="salaryend != null" >
        salaryEnd = #{salaryend,jdbcType=INTEGER},
      </if>
      <if test="jobcity != null" >
        jobCity = #{jobcity,jdbcType=VARCHAR},
      </if>
      <if test="jobexperience != null" >
        JobexpErience = #{jobexperience,jdbcType=VARCHAR},
      </if>
      <if test="begintime != null" >
        beginTime = #{begintime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        endTime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="hits != null" >
        hits = #{hits,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where jobId = #{jobid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.hbpu.recruitment.pojo.Job" >
    update job
    set companyId = #{companyid,jdbcType=INTEGER},
      c3Id = #{c3id,jdbcType=INTEGER},
      departments = #{departments,jdbcType=VARCHAR},
      workType = #{worktype,jdbcType=INTEGER},
      education = #{education,jdbcType=INTEGER},
      jobTemptation = #{jobtemptation,jdbcType=VARCHAR},
      jobDescribe = #{jobdescribe,jdbcType=VARCHAR},
      jobAddress = #{jobaddress,jdbcType=VARCHAR},
      jobEmail = #{jobemail,jdbcType=VARCHAR},
      salaryBegin = #{salarybegin,jdbcType=INTEGER},
      salaryEnd = #{salaryend,jdbcType=INTEGER},
      jobCity = #{jobcity,jdbcType=VARCHAR},
      JobexpErience = #{jobexperience,jdbcType=VARCHAR},
      beginTime = #{begintime,jdbcType=TIMESTAMP},
      endTime = #{endtime,jdbcType=TIMESTAMP},
      hits = #{hits,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER}
    where jobId = #{jobid,jdbcType=INTEGER}
  </update>
</mapper>
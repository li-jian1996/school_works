<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.hbpu.recruitment.mapper.PersonJobMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.hbpu.recruitment.pojo.PersonJob" >
    <id column="jobId" property="jobid" jdbcType="INTEGER" />
    <id column="personId" property="personid" jdbcType="INTEGER" />
    <result column="deliveryTime" property="deliverytime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    jobId, personId, deliveryTime, status, state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.hbpu.recruitment.pojo.PersonJobExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from person_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="cn.edu.hbpu.recruitment.pojo.PersonJobKey" >
    select 
    <include refid="Base_Column_List" />
    from person_job
    where jobId = #{jobid,jdbcType=INTEGER}
      and personId = #{personid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.edu.hbpu.recruitment.pojo.PersonJobKey" >
    delete from person_job
    where jobId = #{jobid,jdbcType=INTEGER}
      and personId = #{personid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.hbpu.recruitment.pojo.PersonJobExample" >
    delete from person_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.hbpu.recruitment.pojo.PersonJob" >
    insert into person_job (jobId, personId, deliveryTime, 
      status, state)
    values (#{jobid,jdbcType=INTEGER}, #{personid,jdbcType=INTEGER}, #{deliverytime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER}, #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.hbpu.recruitment.pojo.PersonJob" >
    insert into person_job
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="jobid != null" >
        jobId,
      </if>
      <if test="personid != null" >
        personId,
      </if>
      <if test="deliverytime != null" >
        deliveryTime,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="jobid != null" >
        #{jobid,jdbcType=INTEGER},
      </if>
      <if test="personid != null" >
        #{personid,jdbcType=INTEGER},
      </if>
      <if test="deliverytime != null" >
        #{deliverytime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.hbpu.recruitment.pojo.PersonJobExample" resultType="java.lang.Integer" >
    select count(*) from person_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update person_job
    <set >
      <if test="record.jobid != null" >
        jobId = #{record.jobid,jdbcType=INTEGER},
      </if>
      <if test="record.personid != null" >
        personId = #{record.personid,jdbcType=INTEGER},
      </if>
      <if test="record.deliverytime != null" >
        deliveryTime = #{record.deliverytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update person_job
    set jobId = #{record.jobid,jdbcType=INTEGER},
      personId = #{record.personid,jdbcType=INTEGER},
      deliveryTime = #{record.deliverytime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.hbpu.recruitment.pojo.PersonJob" >
    update person_job
    <set >
      <if test="deliverytime != null" >
        deliveryTime = #{deliverytime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where jobId = #{jobid,jdbcType=INTEGER}
      and personId = #{personid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.hbpu.recruitment.pojo.PersonJob" >
    update person_job
    set deliveryTime = #{deliverytime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER}
    where jobId = #{jobid,jdbcType=INTEGER}
      and personId = #{personid,jdbcType=INTEGER}
  </update>
</mapper>